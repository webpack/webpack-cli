// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`amd transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    amd: {
        jQuery: true,
        kQuery: false
    }
}
"
`;

exports[`amd transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`bail transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    bail: true
}
"
`;

exports[`bail transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`cache transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    cache: true
}
"
`;

exports[`cache transforms correctly using "other-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    cache: cacheVal
}
"
`;

exports[`cache transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`cache transforms correctly using "other-1" data 2`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`context transforms correctly using "context-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    context: path.resolve(__dirname, 'app')
}
"
`;

exports[`context transforms correctly using "context-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    context: './some/fake/path'
}
"
`;

exports[`context transforms correctly using "context-2" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    context: contextVariable
}
"
`;

exports[`context transforms correctly using "context-3" data 1`] = `
"module.exports = {
    entry: 'index.js',
    context: path.join('dist', mist)
}
"
`;

exports[`context transforms correctly using "context-4" data 1`] = `
"module.exports = {
	entry: 'index.js',
	context: 'reassign me like one of your french girls'
}
"
`;

exports[`devServer transforms correctly using "devServer-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devServer: {
        contentBase: path.join(__dirname, 'dist'),
        compress: true,
        port: 9000
    }
}
"
`;

exports[`devServer transforms correctly using "devServer-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devServer: someVar
}
"
`;

exports[`devServer transforms correctly using "devServer-2" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devServer: {
        contentBase: path.join(__dirname, 'dist'),
        compress: true,
        port: 9000
    }
}
"
`;

exports[`devServer transforms correctly using "devServer-3" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	devServer: {
	contentBase: \\"edSheeran\\",
	compress: true,
	port: 9000
}
}
"
`;

exports[`devServer transforms correctly using "devServer-4" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	devServer: {
		empti: \\"ness\\"
	}
}
"
`;

exports[`devtool transforms correctly using "devtool-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: 'source-map'
}
"
`;

exports[`devtool transforms correctly using "devtool-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: myVariable
}
"
`;

exports[`devtool transforms correctly using "devtool-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: 'cheap-module-source-map'
}
"
`;

exports[`devtool transforms correctly using "devtool-1" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: false
}
"
`;

exports[`devtool transforms correctly using "devtool-2" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: 'source-map'
}
"
`;

exports[`devtool transforms correctly using "devtool-3" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: myVariable
}
"
`;

exports[`devtool transforms correctly using "devtool-3" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    devtool: 'cheap-module-source-map'
}
"
`;

exports[`devtool transforms correctly using "devtool-4" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	devtool: 'eval'
}
"
`;

exports[`devtool transforms correctly using "devtool-4" data 2`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	devtool: 'eval'
}
"
`;

exports[`entry transforms correctly using "entry-0" data 1`] = `
"module.exports = {
  entry: 'index.js'
}
"
`;

exports[`entry transforms correctly using "entry-0" data 2`] = `
"module.exports = {
  entry: ['index.js', 'app.js']
}
"
`;

exports[`entry transforms correctly using "entry-0" data 3`] = `
"module.exports = {
  entry: {
    index: 'index.js',
    app: 'app.js'
  }
}
"
`;

exports[`entry transforms correctly using "entry-0" data 4`] = `
"module.exports = {
  entry: {
    inject: something,
    app: 'app.js',
    inject_1: else
  }
}
"
`;

exports[`entry transforms correctly using "entry-0" data 5`] = `
"module.exports = {
  entry: () => 'index.js'
}
"
`;

exports[`entry transforms correctly using "entry-0" data 6`] = `
"module.exports = {
  entry: () => new Promise((resolve) => resolve(['./app', './router']))
}
"
`;

exports[`entry transforms correctly using "entry-0" data 7`] = `
"module.exports = {
  entry: entryStringVariable
}
"
`;

exports[`entry transforms correctly using "entry-0" data 8`] = `
"module.exports = {
  entry: 'index.js'
}
"
`;

exports[`entry transforms correctly using "entry-0" data 9`] = `
"module.exports = {
  entry: ['index.js', 'app.js']
}
"
`;

exports[`entry transforms correctly using "entry-0" data 10`] = `
"module.exports = {
  entry: {
    inject: something,
    ed: 'eddy.js',
    inject_1: else
  }
}
"
`;

exports[`entry transforms correctly using "entry-0" data 11`] = `
"module.exports = {
  entry: () => new Promise((resolve) => resolve(['./app', './router']))
}
"
`;

exports[`entry transforms correctly using "entry-0" data 12`] = `
"module.exports = {
  entry: entryStringVariable
}
"
`;

exports[`entry transforms correctly using "entry-1" data 1`] = `
"module.exports = {
	entry: {
		index: 'index.js',
		ed: 'sheeran'
	}
}
"
`;

exports[`entry transforms correctly using "entry-1" data 2`] = `
"module.exports = {
	entry: {
		index: 'index.js',
		ed: 'sheeran'
	}
}
"
`;

exports[`externals transforms correctly using "externals-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: /react/
}
"
`;

exports[`externals transforms correctly using "externals-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: {
        jquery: 'jQuery',
        react: 'react'
    }
}
"
`;

exports[`externals transforms correctly using "externals-1" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: myObj
}
"
`;

exports[`externals transforms correctly using "externals-1" data 3`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: {
        jquery: 'jQuery',
        react: reactObj
    }
}
"
`;

exports[`externals transforms correctly using "externals-1" data 4`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: {
        jquery: 'jQuery',
        react: [reactObj, path.join(__dirname, 'app'), 'jquery']
    }
}
"
`;

exports[`externals transforms correctly using "externals-1" data 5`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: {
        lodash: {
            commonjs: 'lodash',
            amd: 'lodash',
            root: '_'
        }
    }
}
"
`;

exports[`externals transforms correctly using "externals-1" data 6`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: {
        lodash: {
            commonjs: lodash,
            amd: hidash,
            root: _
        }
    }
}
"
`;

exports[`externals transforms correctly using "externals-1" data 7`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: [{
        a: false,
        b: true,
        './ext': ./hey
    }, function(context, request, callback) {if (/^yourregex$/.test(request)){return callback(null, 'commonjs ' + request);}callback();}]
}
"
`;

exports[`externals transforms correctly using "externals-1" data 8`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    externals: [
        myObj,
        function(context, request, callback) {if (/^yourregex$/.test(request)){return callback(null, 'commonjs ' + request);}callback();}
    ]
}
"
`;

exports[`merge transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    merge: myConfig
}
"
`;

exports[`merge transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`mode transforms correctly using "mode-1" data 1`] = `
"module.exports = {
  mode: 'production'
};
"
`;

exports[`mode transforms correctly using "mode-1" data 2`] = `
"module.exports = {
  mode: modeVariable
};
"
`;

exports[`mode transforms correctly using "mode-2" data 1`] = `
"module.exports = {
	mode: 'development'
}
"
`;

exports[`mode transforms correctly using "mode-2" data 2`] = `
"module.exports = {
	mode: 'development'
}
"
`;

exports[`module transforms correctly using "module-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    module: {
        rules: [{
            test: /\\\\.(js|vue)$/,
            loader: 'eslint-loader',
            enforce: 'pre',
            include: [customObj, 'Stringy'],

            options: {
                formatter: 'someOption'
            }
        }, {
            test: /\\\\.vue$/,
            loader: 'vue-loader',
            options: vueObject
        }, {
            test: /\\\\.js$/,
            loader: 'babel-loader',
            include: [resolve('src'), resolve('test')]
        }, {
            test: /\\\\.(png|jpe?g|gif|svg)(\\\\?.*)?$/,
            loader: 'url-loader',

            options: {
                limit: 10000,
                name: utils.assetsPath('img/[name].[hash:7].[ext]')
            }
        }, {
            test: /\\\\.(woff2?|eot|ttf|otf)(\\\\?.*)?$/,
            loader: 'url-loader',

            options: {
                limit: 10000,
                name: utils.assetsPath('fonts/[name].[hash:7].[ext]'),
                someArr: [Hey]
            }
        }]
    }
}
"
`;

exports[`module transforms correctly using "module-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    module: {
        rules: [{{#if_eq build 'standalone'}}, {
            test: /\\\\.(js|vue)$/,
            loader: 'eslint-loader',
            enforce: 'pre',
            include: [customObj, 'Stringy'],

            options: {
                formatter: 'someOption'
            }
        }, {
            test: /\\\\.vue$/,
            loader: 'vue-loader',
            options: vueObject
        }, {
            test: /\\\\.js$/,
            loader: 'babel-loader',
            include: [resolve('src'), resolve('test')]
        }, {
            test: /\\\\.(png|jpe?g|gif|svg)(\\\\?.*)?$/,
            loader: 'url-loader',

            options: {
                limit: 10000,
                name: utils.assetsPath('img/[name].[hash:7].[ext]'),
                inject: {{#if_eq build 'standalone'}}
            }
        }, {
            test: /\\\\.(woff2?|eot|ttf|otf)(\\\\?.*)?$/,
            loader: 'url-loader',
            inject: {{#if_eq build 'standalone'}},

            options: {
                limit: 10000,
                name: utils.assetsPath('fonts/[name].[hash:7].[ext]')
            }
        }]
    }
}
"
`;

exports[`module transforms correctly using "module-0" data 3`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    module: {
        rules: [{
            test: /\\\\.(js|vue)$/,
            loader: 'eslint-loader',
            enforce: 'pre',
            include: [customObj, 'Stringy'],

            options: {
                formatter: 'someOption'
            }
        }, {
            test: /\\\\.vue$/,
            loader: 'vue-loader',
            options: vueObject
        }, {
            test: /\\\\.js$/,
            loader: 'babel-loader',
            include: [resolve('src'), resolve('test')]
        }, {
            test: /\\\\.(png|jpe?g|gif|svg)(\\\\?.*)?$/,
            loader: 'url-loader',

            options: {
                limit: 10000,
                name: utils.assetsPath('img/[name].[hash:7].[ext]')
            }
        }, {
            test: /\\\\.(woff2?|eot|ttf|otf)(\\\\?.*)?$/,
            loader: 'url-loader',

            options: {
                limit: 10000,
                name: utils.assetsPath('fonts/[name].[hash:7].[ext]'),
                someArr: [Hey]
            }
        }]
    }
}
"
`;

exports[`module transforms correctly using "module-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    module: {
        noParse: /jquery|lodash/,

        rules: [{
            test: /\\\\.js$/,

            parser: {
                amd: false
            },

            use: ['htmllint-loader', {
                loader: 'html-loader',

                options: {
                    hello: 'world'
                }
            }]
        }]
    }
}
"
`;

exports[`module transforms correctly using "module-1" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    module: {
        noParse: /jquery|lodash/,

        rules: [{
            test: /\\\\.js$/,

            parser: {
                amd: false
            },

            use: ['htmllint-loader', {
                loader: 'html-loader',

                options: {
                    hello: 'world'
                }
            }]
        }]
    }
}
"
`;

exports[`module transforms correctly using "module-2" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	module: {
		rules: [
			{
				loader: \\"'eslint-loader'\\",
				enforce: \\"'pre'\\",
				include: [\\"hey\\", \\"'Stringy'\\"],
				options: {
					formatter: \\"'someOption'\\"
				}
			},
			{
				loader: \\"'vue-loader'\\",
				options: \\"vueObject\\"
			},
			{
				loader: \\"'babel-loader'\\",
				include: [\\"resolve('src')\\", \\"resolve('test')\\"]
			},
			{
				loader: \\"'url-loader'\\",
				options: {
					limit: 10000,
					name: \\"utils.assetsPath('img/[name].[hash:7].[ext]')\\",
					inject: \\"{{#if_eq build 'standalone'}}\\"
				}
			},
			{
				loader: \\"'url-loader'\\",
				inject: \\"{{#if_eq build 'standalone'}}\\",
				options: {
					limit: \\"10000\\",
					name: \\"utils.assetsPath('fonts/[name].[hash:7].[ext]')\\"
				}
			}
		]
	},
}
"
`;

exports[`node transforms correctly using "node-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    node: {
        console: false,
        global: true,
        process: true,
        Buffer: true,
        __filename: mock,
        __dirname: mock,
        setImmediate: true
    }
}
"
`;

exports[`output transforms correctly using "output-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
        filename: 'bundle',
        path: 'dist/assets',
        pathinfo: true,
        publicPath: 'https://google.com',
        sourceMapFilename: '[name].map',
        sourcePrefix: '\\\\t',
        umdNamedDefine: true,
        strictModuleExceptionHandling: true
    }
}
"
`;

exports[`output transforms correctly using "output-1" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: \\"'bundle'\\",
		path: \\"'dist/assets'\\",
		pathinfo: true,
		publicPath: \\"'https://google.com'\\",
		sourceMapFilename: \\"'[name].map'\\",
		sourcePrefix: jscodeshift(\\"'\\\\t'\\"),
		umdNamedDefine: true,
		strictModuleExceptionHandling: true
	},
}
"
`;

exports[`parallelism transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    parallelism: 10
}
"
`;

exports[`parallelism transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`performance transforms correctly using "performance-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    performance: {
        hints: 'warning',
        maxEntrypointSize: 400000,
        maxAssetSize: 100000,
        assetFilter: function(assetFilename) {return assetFilename.endsWith('.js');}
    }
}
"
`;

exports[`performance transforms correctly using "performance-1" data 1`] = `
"module.exports = {
	performance: {
		hints: \\"'warning'\\",
		maxEntrypointSize: 400000,
		maxAssetSize: 100000,
		assetFilter:
			\\"function(assetFilename) {\\" +
			\\"return assetFilename.endsWith('.js');\\" +
			\\"}\\"
	}
}
"
`;

exports[`plugins transforms correctly using "plugins-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    plugins: [
        new webpack.optimize.CommonsChunkPlugin({name:'vendor',filename:'vendor-[hash].min.js'})
    ]
}
"
`;

exports[`plugins transforms correctly using "plugins-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    plugins: new webpack.optimize.DefinePlugin()
}
"
`;

exports[`plugins transforms correctly using "plugins-1" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	plugins: ['something']
}
"
`;

exports[`profile transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    profile: true
}
"
`;

exports[`profile transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`recordsInputPath transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    recordsInputPath: path.join('dist', mine)
}
"
`;

exports[`recordsInputPath transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`recordsOutputPath transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    recordsOutputPath: path.join('src', yours)
}
"
`;

exports[`recordsOutputPath transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`recordsPath transforms correctly using "other-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    recordsPath: path.join(__dirname, 'records.json')
}
"
`;

exports[`recordsPath transforms correctly using "other-1" data 1`] = `
"module.exports = {
	bail: true,
	cache: true,
	profile: true,
	merge: 'NotMuch',
	parallelism: 69,
	recordsInputPath: 'something',
	recordsOutputPath: 'else',
	recordsPath: 'Brooklyn',
	amd: {
		jQuery: true,
		kQuery: false
	}
};
"
`;

exports[`resolve transforms correctly using "resolve-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    resolve: {
        alias: {
            inject: {{#if_eq build 'standalone'}},
            hello: 'world',
            inject_1: {{/if_eq}},
            world: hello
        },

        aliasFields: ['browser', wars],
        descriptionFiles: ['a', b],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: [hey, 'ho'],
        mainFields: [main, 'story'],
        mainFiles: ['noMainFileHere', iGuess],
        modules: [one, 'two'],
        unsafeCache: false,
        plugins: [somePlugin, 'stringVal'],
        symlinks: true
    }
}
"
`;

exports[`resolve transforms correctly using "resolve-1" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	resolve: {
		alias: {
			inject: \\"{{#if_eq build 'standalone'}}\\",
			hello: \\"'world'\\",
			inject_1: \\"{{/if_eq}}\\",
			world: \\"hello\\"
		},
		aliasFields: [\\"'browser'\\", \\"wars\\"],
		descriptionFiles: [\\"'a'\\", \\"b\\", \\"'c'\\"],
		enforceExtension: false,
		enforceModuleExtension: false,
		extensions: [\\"hey\\", \\"ho\\"],
		mainFields: [\\"main\\", \\"'story'\\"],
		mainFiles: [\\"'noMainFileHere'\\", \\"iGuess\\"],
		modules: [\\"one\\", \\"'two'\\"],
		unsafeCache: false,
		resolveLoader: {
			modules: [\\"'node_modules'\\", \\"mode_nodules\\"],
			extensions: [\\"jsVal\\", \\"'.json'\\"],
			mainFields: [\\"loader\\", \\"'main'\\"],
			moduleExtensions: [\\"'-loader'\\", \\"value\\"]
		},
		plugins: [\\"somePlugin\\", \\"'stringVal'\\"],
		symlinks: true
	}
}
"
`;

exports[`resolveLoader transforms correctly using "resolveLoader-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    resolveLoader: {
        modules: ['ok', mode_nodules],
        mainFields: [no, 'main'],
        moduleExtensions: ['-kn', ok]
    }
}
"
`;

exports[`resolveLoader transforms correctly using "resolveLoader-1" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	resolveLoader: {
		moduleExtensions: [ '-loader' ]
	}
}
"
`;

exports[`stats transforms correctly using "stats-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    stats: {
        assets: true,
        assetsSort: 'field',
        cached: true,
        cachedAssets: true,
        children: true,
        chunks: true,
        chunkModules: true,
        chunkOrigins: true,
        chunksSort: 'field',
        context: '../src/',
        colors: true,
        depth: false,
        entrypoints: customVal,
        errors: true,
        errorDetails: true,
        exclude: [],
        hash: true,
        maxModules: 15,
        modules: true,
        modulesSort: 'field',
        performance: true,
        providedExports: false,
        publicPath: true,
        reasons: true,
        source: true,
        timings: true,
        usedExports: false,
        version: true,
        warnings: true
    }
}
"
`;

exports[`stats transforms correctly using "stats-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    stats: 'errors-only'
}
"
`;

exports[`stats transforms correctly using "stats-0" data 3`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    stats: {
        assets: true,
        assetsSort: 'naw',
        cached: true,
        cachedAssets: true,
        children: true,
        chunks: true,
        version: true,
        warnings: false
    }
}
"
`;

exports[`stats transforms correctly using "stats-1" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	stats: {
		assets: false,
		assetsSort: \\"'gold'\\",
		cached: true,
		cachedAssets: true,
		children: false,
		chunks: true,
	}
}
"
`;

exports[`stats transforms correctly using "stats-1" data 2`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	stats: {
		assets: false,
		assetsSort: \\"'gold'\\",
		cached: true,
		cachedAssets: true,
		children: false,
		chunks: true,
	}
}
"
`;

exports[`target transforms correctly using "target-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    target: 'async-node'
}
"
`;

exports[`target transforms correctly using "target-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    target: 'async-node'
}
"
`;

exports[`target transforms correctly using "target-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    target: node
}
"
`;

exports[`target transforms correctly using "target-1" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    target: 'node'
}
"
`;

exports[`target transforms correctly using "target-2" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	target: 'something'
}
"
`;

exports[`top-scope transforms correctly using "top-scope-0" data 1`] = `
"module.exports = {
  top-scope: [const test = 'me';]
}
"
`;

exports[`top-scope transforms correctly using "top-scope-1" data 1`] = `
"const webpack = require(\\"webpack\\");

module.exports = {
  top-scope: [const webpack = require('webpack');]
}
"
`;

exports[`watch transforms correctly using "watch-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: true
}
"
`;

exports[`watch transforms correctly using "watch-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: false
}
"
`;

exports[`watch transforms correctly using "watch-0" data 3`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: true
}
"
`;

exports[`watch transforms correctly using "watch-0" data 4`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: false
}
"
`;

exports[`watch transforms correctly using "watch-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: true
}
"
`;

exports[`watch transforms correctly using "watch-1" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watch: false
}
"
`;

exports[`watch transforms correctly using "watch-4" data 1`] = `
"module.exports = {
	watch: 'someone'
}
"
`;

exports[`watch transforms correctly using "watch-4" data 2`] = `
"module.exports = {
	watch: 'someone'
}
"
`;

exports[`watchOptions transforms correctly using "watch-0" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watchOptions: {
        aggregateTimeout: 300,
        poll: 1000,
        ignored: /node_modules/
    }
}
"
`;

exports[`watchOptions transforms correctly using "watch-0" data 2`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watchOptions: {
        aggregateTimeout: 300,
        poll: 1000,
        ignored: /node_modules/
    }
}
"
`;

exports[`watchOptions transforms correctly using "watch-1" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watchOptions: {
        aggregateTimeout: 300,
        poll: 1000,
        ignored: /node_modules/
    }
}
"
`;

exports[`watchOptions transforms correctly using "watch-2" data 1`] = `
"module.exports = {
    entry: 'index.js',

    output: {
		filename: 'bundle.js'
	},

    watchOptions: {
        aggregateTimeout: 300,
        poll: 1000,
        ignored: /node_modules/
    }
}
"
`;

exports[`watchOptions transforms correctly using "watch-3" data 1`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	watchOptions: {
		aggregateTimeout: 100,
		poll: 90,
		ignored: \\"/ok/\\"
	},
	watch: 'me'
}
"
`;

exports[`watchOptions transforms correctly using "watch-3" data 2`] = `
"module.exports = {
	entry: 'index.js',
	output: {
		filename: 'bundle.js'
	},
	watchOptions: {
		aggregateTimeout: 100,
		poll: 90,
		ignored: \\"/ok/\\"
	},
	watch: 'me'
}
"
`;
