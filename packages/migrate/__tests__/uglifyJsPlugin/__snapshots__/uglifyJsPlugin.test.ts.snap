// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`uglifyJsPluginu uglifyJsPlugin transforms correctly using "uglifyJsPlugin-0" data 1`] = `
"module.exports = {
    optimization: {
        minimize: true
    }
}
"
`;

exports[`uglifyJsPluginu uglifyJsPlugin transforms correctly using "uglifyJsPlugin-1" data 1`] = `
"const TerserPlugin = require('terser-webpack-plugin');
module.exports = {
    devtool: \\"source-map\\",
    optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
            sourceMap: true,
            compress: {}
        })]
    }
}
"
`;

exports[`uglifyJsPluginu uglifyJsPlugin transforms correctly using "uglifyJsPlugin-2" data 1`] = `
"const TerserPlugin = require('terser-webpack-plugin');
module.exports = {
    devtool: \\"source-map\\",
    optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
            sourceMap: true,
            compress: {}
        })]
    }
}
"
`;

exports[`uglifyJsPluginu uglifyJsPlugin transforms correctly using "uglifyJsPlugin-3" data 1`] = `
"module.exports = {
    devtool: 'eval',

    entry: [
		'./src/index'
	],

    output: {
		path: path.join(__dirname, 'dist'),
		filename: 'index.js'
	},

    module: {
		loaders: [{
			test: /.js$/,
			loaders: ['babel'],
			include: path.join(__dirname, 'src')
		}]
	},

    resolve: {
		root: path.resolve('/src'),
		modules: ['node_modules']
	},

    plugins: [new webpack.optimize.OccurrenceOrderPlugin()],
    debug: true,

    optimization: {
        minimize: true
    }
};
"
`;

exports[`uglifyJsPluginu uglifyJsPlugin transforms correctly using "uglifyJsPlugin-4" data 1`] = `
"const TerserPlugin = require('terser-webpack-plugin');
module.exports = {
    devtool: 'eval',

    entry: [
		'./src/index'
	],

    output: {
		path: path.join(__dirname, 'dist'),
		filename: 'index.js'
	},

    module: {
		loaders: [{
			test: /.js$/,
			loaders: ['babel'],
			include: path.join(__dirname, 'src')
		}]
	},

    resolve: {
		root: path.resolve('/src'),
		modules: ['node_modules']
	},

    plugins: [new webpack.optimize.OccurrenceOrderPlugin()],
    debug: true,

    optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
            sourceMap: true
        })]
    }
};
"
`;
