// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`init generator generates a webpack config that uses ES6 1`] = `
Object {
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "path.resolve(__dirname, 'src')",
        ],
        "loader": "'babel-loader'",
        "test": "/\\\\.(js|jsx)$/",
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
  ],
}
`;

exports[`init generator generates a webpack config that uses Typescript 1`] = `
Object {
  "entry": "'./src/index.ts'",
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "exclude": Array [
          "/node_modules/",
        ],
        "include": Array [
          "path.resolve(__dirname, 'src')",
        ],
        "loader": "'ts-loader'",
        "test": "/\\\\.(ts|tsx)$/",
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
  ],
  "resolve": Object {
    "extensions": Array [
      "'.tsx'",
      "'.ts'",
      "'.js'",
    ],
  },
}
`;

exports[`init generator generates a webpack config using CSS with mini-css-extract-plugin 1`] = `
Object {
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "test": "/.css$/",
        "use": Array [
          Object {
            "loader": "MiniCssExtractPlugin.loader",
          },
          Object {
            "loader": "\\"style-loader\\"",
          },
          Object {
            "loader": "\\"css-loader\\"",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new MiniCssExtractPlugin({ filename:'main.[chunkhash].css' })",
  ],
}
`;

exports[`init generator generates a webpack config using CSS without mini-css-extract-plugin 1`] = `
Object {
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "test": "/.css$/",
        "use": Array [
          Object {
            "loader": "\\"style-loader\\"",
          },
          Object {
            "loader": "\\"css-loader\\"",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
  ],
}
`;

exports[`init generator generates a webpack config with custom entry and output 1`] = `
Object {
  "entry": "'./src/index2.js'",
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "output": Object {
    "path": "path.resolve(__dirname, 'dist2')",
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
  ],
}
`;

exports[`init generator generates a webpack config with default options 1`] = `
Object {
  "devServer": Object {
    "open": true,
  },
  "mode": "'production'",
  "module": Object {
    "rules": Array [],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "chunks": "'all'",
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new HtmlWebpackPlugin({
					template: 'index.html'
				})",
    "new workboxPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config with multiple entries 1`] = `
Object {
  "entry": Object {
    "test1": "'./dir1/test1.js'",
    "test2": "'./dir2/test2.js'",
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "optimization": Object {
    "minimizer": Array [
      "new TerserPlugin()",
    ],
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendors": Object {
          "priority": -10,
          "test": "/[\\\\\\\\/]node_modules[\\\\\\\\/]/",
        },
      },
      "chunks": "'async'",
      "minChunks": 1,
      "minSize": 30000,
      "name": false,
    },
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
  ],
}
`;
