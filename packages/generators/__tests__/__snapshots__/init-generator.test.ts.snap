// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`init generator generates a webpack config that uses ES6 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "path.resolve(__dirname, 'src')",
        ],
        "loader": "'babel-loader'",
        "test": "/\\\\.(js|jsx)$/",
      },
    ],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config that uses Typescript 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "entry": "'./src/index.ts'",
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "exclude": Array [
          "/node_modules/",
        ],
        "include": Array [
          "path.resolve(__dirname, 'src')",
        ],
        "loader": "'ts-loader'",
        "test": "/\\\\.(ts|tsx)$/",
      },
    ],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
  "resolve": Object {
    "extensions": Array [
      "'.tsx'",
      "'.ts'",
      "'.js'",
    ],
  },
}
`;

exports[`init generator generates a webpack config that uses Typescript 2`] = `
Object {
  "compilerOptions": Object {
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    "module": "es6",
    "noImplicitAny": true,
    "target": "es5",
  },
  "files": Array [
    "src/index.ts",
  ],
}
`;

exports[`init generator generates a webpack config using CSS with mini-css-extract-plugin 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "test": "/.css$/",
        "use": Array [
          Object {
            "loader": "MiniCssExtractPlugin.loader",
          },
          Object {
            "loader": "\\"css-loader\\"",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
    ],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new MiniCssExtractPlugin({ filename:'main.[contenthash].css' })",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config using CSS without mini-css-extract-plugin 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [
      Object {
        "test": "/.css$/",
        "use": Array [
          Object {
            "loader": "\\"style-loader\\"",
          },
          Object {
            "loader": "\\"css-loader\\"",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
    ],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config with custom entry and output 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "entry": "'./src/index2.js'",
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "output": Object {
    "path": "path.resolve(__dirname, 'dist2')",
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config with default options 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config with multiple entries 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "entry": Object {
    "test1": "'./dir1/test1.js'",
    "test2": "'./dir2/test2.js'",
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;

exports[`init generator generates a webpack config with optional dependencies 1`] = `
Object {
  "devServer": Object {
    "host": "'localhost'",
    "open": true,
  },
  "mode": "'development'",
  "module": Object {
    "rules": Array [],
  },
  "plugins": Array [
    "new webpack.ProgressPlugin()",
    "new HtmlWebpackPlugin({
					template: 'index.html'
				})",
    "new WorkboxWebpackPlugin.GenerateSW({
				swDest: 'sw.js',
				clientsClaim: true,
				skipWaiting: false,
			})",
  ],
}
`;
