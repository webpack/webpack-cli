// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`recursive parser add transforms correctly using "fixture-2" data 1`] = `
"const webpack = require('webpack');

module.exports = {
    entry: {
        objects: 'are',

        super: [
            'yeah',
            {
                test: new RegExp(/\\\\.(js|vue)$/),
                loader: \\"'eslint-loader'\\",
                enforce: \\"'pre'\\",
                include: ['customObj', \\"'Stringy'\\"],
                options: {
                    formatter: \\"'oki'\\",
                    updateMe: 'sure',
                },
            },
        ],

        nice: \\"':)'\\",
        foo: 'Promise.resolve()',
        man: '() => duper',
        mode: 'yaaa',
        foo: Promise.resolve(),
        man: () => nice!!,
        mode: super-man,
        nice: '=)',
        objects: are not,

        super: [op, {
            enforce: 'pre',
            include: [asd, 'Stringy'],
            loader: 'pia-loader',

            options: {
                formatter: 'nao'
            },

            test: /\\\\.(wasm|c)$/
        }]
    },
};
"
`;

exports[`recursive parser init transforms correctly using "fixture-1" data 1`] = `
"module.exports = {
  entry: {
    foo: Promise.resolve(),
    man: () => duper,
    nice: ':)',
    objects: are,

    super: [yeah, {
      enforce: 'pre',
      include: [customObj, 'Stringy'],
      loader: 'eslint-loader',

      options: {
        formatter: 'someOption'
      },

      test: /\\\\.(js|vue)$/
    }]
  }
};
"
`;

exports[`recursive parser remove transforms correctly using "fixture-3" data 1`] = `
"module.exports = {
    entry: {
        a: 'a.js',
        b: 'taddda',
    },
    mode: 'prod',
    devServer: {
        port: 9000,
    },
    devtool: 'eval',
    plugins: ['plugin1', 'plugin2', 'plugin3'],
    resolve: {
        aliasFields: [\\"'browser'\\", 'wars'],
        descriptionFiles: [\\"'a'\\", 'b', \\"'c'\\"],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: ['hey', 'ho'],
        mainFields: ['main', \\"'story'\\"],
        mainFiles: [\\"'noMainFileHere'\\", 'iGuess'],
        modules: ['one', \\"'two'\\"],
        unsafeCache: false,

        resolveLoader: {
            modules: [\\"'node_modules'\\", 'mode_nodules'],
            extensions: ['jsVal', \\"'.json'\\"],
            mainFields: ['loader', \\"'main'\\"],
            moduleExtensions: [\\"'-loader'\\", 'value'],
        },

        plugins: ['somePlugin', \\"'stringVal'\\"],
        symlinks: true
    },
    module: {
        noParse: function(content) {
            return /jquery|lodash/.test(content);
        },
        rules: [
            {
                loader: 'eslint-loader',
                options: {
                    formatter: 'someOption',
                },
            },
            {
                loader: 'vue-loader',
                options: 'vueObject',
            },
            {
                loader: 'babel-loader',
                include: 'asdf',
            },
        ],
    },
};
"
`;

exports[`recursive parser remove transforms correctly using "fixture-3" data 2`] = `
"module.exports = {
    entry: {
        a: 'a.js',
        b: 'taddda',
    },
    mode: 'prod',
    devServer: {
        port: 9000,
    },
    devtool: 'eval',
    plugins: ['plugin1', 'plugin3'],
    resolve: {
        alias: {
            inject: \\"{{#if_eq build 'standalone'}}\\",
            hello: \\"'world'\\",
            inject_1: '{{/if_eq}}',
            world: 'hello',
        },
        aliasFields: [\\"'browser'\\", 'wars'],
        descriptionFiles: [\\"'a'\\", 'b', \\"'c'\\"],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: ['hey', 'ho'],
        mainFields: ['main', \\"'story'\\"],
        mainFiles: [\\"'noMainFileHere'\\", 'iGuess'],
        modules: ['one', \\"'two'\\"],
        unsafeCache: false,
        resolveLoader: {
            modules: [\\"'node_modules'\\", 'mode_nodules'],
            extensions: ['jsVal', \\"'.json'\\"],
            mainFields: ['loader', \\"'main'\\"],
            moduleExtensions: [\\"'-loader'\\", 'value'],
        },
        plugins: ['somePlugin', \\"'stringVal'\\"],
        symlinks: true,
    },
    module: {
        noParse: function(content) {
            return /jquery|lodash/.test(content);
        },
        rules: [
            {
                loader: 'eslint-loader',
                options: {
                    formatter: 'someOption',
                },
            },
            {
                loader: 'vue-loader',
                options: 'vueObject',
            },
            {
                loader: 'babel-loader',
                include: 'asdf',
            },
        ],
    },
};
"
`;

exports[`recursive parser remove transforms correctly using "fixture-3" data 3`] = `
"module.exports = {
    entry: {
        a: 'a.js',
        b: 'taddda',
    },
    mode: 'prod',
    devServer: {
        port: 9000,
    },
    devtool: 'eval',
    plugins: ['plugin1', 'plugin2', 'plugin3'],
    resolve: {
        alias: {
            inject: \\"{{#if_eq build 'standalone'}}\\",
            hello: \\"'world'\\",
            inject_1: '{{/if_eq}}',
            world: 'hello',
        },
        aliasFields: [\\"'browser'\\", 'wars'],
        descriptionFiles: [\\"'a'\\", 'b', \\"'c'\\"],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: ['hey', 'ho'],
        mainFields: ['main', \\"'story'\\"],
        mainFiles: [\\"'noMainFileHere'\\", 'iGuess'],
        modules: ['one', \\"'two'\\"],
        unsafeCache: false,
        resolveLoader: {
            modules: [\\"'node_modules'\\", 'mode_nodules'],
            extensions: ['jsVal', \\"'.json'\\"],
            mainFields: ['loader', \\"'main'\\"],
            moduleExtensions: [\\"'-loader'\\", 'value'],
        },
        plugins: ['somePlugin', \\"'stringVal'\\"],
        symlinks: true,
    },
    module: {
        rules: [
            {
                loader: 'eslint-loader',
                options: {
                    formatter: 'someOption',
                },
            },
            {
                loader: 'vue-loader',
                options: 'vueObject',
            },
            {
                loader: 'babel-loader',
                include: 'asdf',
            },
        ]
    },
};
"
`;

exports[`recursive parser remove transforms correctly using "fixture-3" data 4`] = `
"module.exports = {
    entry: {
        b: 'taddda'
    },
    mode: 'prod',
    devServer: {
        port: 9000,
    },
    devtool: 'eval',
    plugins: ['plugin1', 'plugin2', 'plugin3'],
    resolve: {
        alias: {
            inject: \\"{{#if_eq build 'standalone'}}\\",
            hello: \\"'world'\\",
            inject_1: '{{/if_eq}}',
            world: 'hello',
        },
        aliasFields: [\\"'browser'\\", 'wars'],
        descriptionFiles: [\\"'a'\\", 'b', \\"'c'\\"],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: ['hey', 'ho'],
        mainFields: ['main', \\"'story'\\"],
        mainFiles: [\\"'noMainFileHere'\\", 'iGuess'],
        modules: ['one', \\"'two'\\"],
        unsafeCache: false,
        resolveLoader: {
            modules: [\\"'node_modules'\\", 'mode_nodules'],
            extensions: ['jsVal', \\"'.json'\\"],
            mainFields: ['loader', \\"'main'\\"],
            moduleExtensions: [\\"'-loader'\\", 'value'],
        },
        plugins: ['somePlugin', \\"'stringVal'\\"],
        symlinks: true,
    },
    module: {
        noParse: function(content) {
            return /jquery|lodash/.test(content);
        },
        rules: [
            {
                loader: 'eslint-loader',
                options: {
                    formatter: 'someOption',
                },
            },
            {
                loader: 'vue-loader',
                options: 'vueObject',
            },
            {
                loader: 'babel-loader',
                include: 'asdf',
            },
        ],
    },
};
"
`;

exports[`recursive parser remove transforms correctly using "fixture-3" data 5`] = `
"module.exports = {
    entry: {
        a: 'a.js',
        b: 'taddda',
    },
    mode: 'prod',
    devServer: {
        port: 9000,
    },
    devtool: 'eval',
    plugins: ['plugin1', 'plugin2', 'plugin3'],
    resolve: {
        alias: {
            inject: \\"{{#if_eq build 'standalone'}}\\",
            hello: \\"'world'\\",
            inject_1: '{{/if_eq}}',
            world: 'hello',
        },
        aliasFields: [\\"'browser'\\", 'wars'],
        descriptionFiles: [\\"'a'\\", 'b', \\"'c'\\"],
        enforceExtension: false,
        enforceModuleExtension: false,
        extensions: ['hey', 'ho'],
        mainFields: ['main', \\"'story'\\"],
        mainFiles: [\\"'noMainFileHere'\\", 'iGuess'],
        modules: ['one', \\"'two'\\"],
        unsafeCache: false,
        resolveLoader: {
            modules: [\\"'node_modules'\\", 'mode_nodules'],
            extensions: ['jsVal', \\"'.json'\\"],
            mainFields: ['loader', \\"'main'\\"],
            moduleExtensions: [\\"'-loader'\\", 'value'],
        },
        plugins: ['somePlugin', \\"'stringVal'\\"],
        symlinks: true,
    },
    module: {
        noParse: function(content) {
            return /jquery|lodash/.test(content);
        },
        rules: [{
            loader: 'vue-loader',
            options: 'vueObject',
        }, {
            loader: 'babel-loader',
            include: 'asdf',
        }],
    },
};
"
`;
